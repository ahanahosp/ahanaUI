<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"   
 		xmlns:sec="http://www.springframework.org/schema/security"  
  	 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
  	 	xmlns:util="http://www.springframework.org/schema/util"
     	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
    	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
    	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">
          
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
	 
	<alias name="filterChainProxy" alias="springSecurityFilterChain"/>
	
	<bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map request-matcher="ant">
 			<sec:filter-chain pattern="/**" filters="httpSessionContextIntegrationFilter,
 					logoutFilter,
 					authenticationProcessingFilter,
 					securityContextHolderAwareRequestFilter,
 					exceptionTranslationFilter,
 					filterInvocationInterceptor"/>
		</sec:filter-chain-map>
	</bean>
	
	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
	    <constructor-arg value="/views/ahanaShowLoginPage.jsp"/>
	    <constructor-arg>
	        <list>
	            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
	        </list>
		</constructor-arg>
	</bean>
	
	<bean id="httpSessionContextIntegrationFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter" >
		<constructor-arg name="repo" ref="securityContextRepository"/>
	</bean>

	<bean id="securityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>
	
	<bean id="authenticationProcessingFilter" class="com.ahana.commons.system.security.filters.AhanaAuthenticationProcessingFilter">
	    <property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
	    <property name="filterProcessesUrls">
	        <list value-type="java.lang.String">
	            <value>/j_spring_security_check</value>
	        </list>
        </property>
        <property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>
	</bean>
	
	<bean id="authenticationSuccessHandler"  class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler" >
		<property name ="defaultTargetUrl" value="/views/index.jsp"/>
	</bean>
	
	<bean id="authenticationFailureHandler" class="com.ahana.commons.system.security.filters.AhanaFailureHandler">
	    <property name="exceptionMappings">
	        <props>
       			<prop key="com.ahana.commons.system.security.exception.AhanaBadCredentialsException">/views/ahanaLogin.jsp?error=invalidPassword</prop>
       			<prop key="org.springframework.security.authentication.LockedException">/views/ahanaLogin.jsp?error=accountLocked</prop>
       			<prop key="org.springframework.security.authentication.DisabledException">/views/ahanaLogin.jsp?error=accountDisabled</prop>
       			<prop key="org.springframework.security.authentication.AccountExpiredException">/views/ahanaLogin.jsp?error=userAccountNotActivated</prop>
       			<prop key="org.springframework.security.authentication.CredentialsExpiredException">/views/ahanaResetPassword.jsp?error=accountLocked</prop>
       			<prop key="org.springframework.security.authentication.AuthenticationServiceException">/views/ahanaLogin.jsp?error=serviceNotAvailable</prop>
       			<prop key="com.ahana.commons.system.security.exception.AhanaBusinessException">/views/ahanaLogin.jsp?error=userAccountNotActivated</prop>
     		</props>
		</property>
	</bean>	
	
	<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<constructor-arg name="providers" index="0">
			<list>
	            <ref bean="remoteAuthenticationProvider"/>
	            <ref bean="rememberMeAuthenticationProvider"/>
	            <ref bean="anonymousAuthenticationProvider"/>
	        </list>
		</constructor-arg>
   	</bean>
   	
   	<bean id="remoteAuthenticationProvider"	class="com.ahana.commons.system.security.filters.AhanaRemoteAuthenticationProvider"/>

	<bean id="ahanaRemoteAuthenticationManager" class="com.ahana.commons.system.security.filters.AhanaInvokerFactoryBean">
		<property name="serviceUrl">
			<value>http://AHANASERVICES_IP/AHANASERVICES_READENDPOINT/RemoteAuthenticationManager</value>
		</property>
		<property name="serviceInterface">
			<value>com.ahana.commons.system.security.filters.AhanaRemoteAuthenticationManager</value>
		</property>
	</bean>
	
	<bean id="filterInvocationInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="accessDecisionManager" ref="accessDecisionManager"/>
		<property name="securityMetadataSource">
    		<sec:filter-security-metadata-source use-expressions="true" lowercase-comparisons="true">
       			<sec:intercept-url pattern="/services/rest/secure/**" access="isFullyAuthenticated()"/>
				<sec:intercept-url pattern="/logout*" access="isFullyAuthenticated()"/>
				<sec:intercept-url pattern="/views/index.jsp*" access="isFullyAuthenticated()"/>
				<sec:intercept-url pattern="/views/tpl/inpatient-new.html*" access="isFullyAuthenticated()"/>
				<sec:intercept-url pattern="/**"/>
    		</sec:filter-security-metadata-source>
  		</property>
	</bean>
	
	<bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter"/>
	
	<bean id="anonymousProcessingFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
	   	<constructor-arg type="java.lang.String" index="0" name="key" value="anonymous"/>
    </bean>
   	
   	<bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
   		<constructor-arg name="key" value="ahana" index="0" type="java.lang.String"/>
	</bean>
	
	<bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		<constructor-arg name="key" value="anonymous" index="0" type="java.lang.String"/>
	</bean>
	
	<bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<constructor-arg name="authenticationEntryPoint" ref="authenticationEntryPoint" index="0"/>
		<property name="accessDeniedHandler">
		    <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl"/>
	    </property>
	</bean>
	
	<bean id="authenticationEntryPoint"	class="com.ahana.commons.system.security.filters.AhanaAuthenticationEntryPoint">
		<constructor-arg name="loginFormUrl" value="/views/ahanaShowLoginPage.jsp"/>
	</bean>
	
	<bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
		<property name="rolePrefix" value=""/>
	</bean>
	
	<bean id="webExpressionVoter" class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
	
	<bean id="authenticationVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false"/>
		<constructor-arg name="decisionVoters" index="0" type="java.util.List">
			<list>
				<ref bean="roleVoter" />
				<ref bean="authenticationVoter"/>
				<ref bean="webExpressionVoter"/>
			</list>
		</constructor-arg>
	</bean>
</beans>